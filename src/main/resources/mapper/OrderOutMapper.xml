<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.dao.OrderOutMapper">
  <resultMap id="BaseResultMap" type="com.core.pojo.OrderOut">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="oderOutNo" jdbcType="VARCHAR" property="oderoutno" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="TradeOut_id" jdbcType="VARCHAR" property="tradeoutId" />
    <result column="Item_id" jdbcType="VARCHAR" property="itemId" />
  </resultMap>

  <resultMap id="OrderOutListResultMap" type="OrderOut">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="oderOutNo" jdbcType="VARCHAR" property="oderoutno" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="TradeOut_id" jdbcType="VARCHAR" property="tradeoutId" />
    <result column="Item_id" jdbcType="VARCHAR" property="itemId" />
     <association property="category" javaType="Category">
        <result property="name" column="categoryName"/>
     </association>
     <association property="item" javaType="Item">
        <result property="itemname" column="itemName"/>
     </association>
     <association property="tradeOut" javaType="TradeOut">
        <result property="tradeoutdate" column="tradeOutDate"/>
     </association>
  </resultMap>

  <sql id="Base_Column_List">
    id, oderOutNo, amount, remark, requester, TradeOut_id, Item_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orderout
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="countOrderOut" resultType="java.lang.Integer">
    select count(id)
    from orderout
  </select>

  <select id="listOrderOut" parameterType="java.util.Map" resultMap="OrderOutListResultMap">
    <bind name="pattern" value="'%' + name + '%'"/>
    select
    oo.id as "id",
    oo.oderoutno as "oderOutNo",
    oo.remark as "remark",
    oo.amount as "amount",
    tt.tradeoutdate as "tradeOutDate",
    it.itemname as "itemName",
    cy.name as "categoryName"
    from orderout oo
    inner join tradeout tt on tt.id = oo.tradeout_id
    inner join item it on it.id = oo.item_id
    inner join category cy on cy.id = it.category_id
    <where>
        <if test="name != ''">
        and oi.orderoutno like #{pattern}
        </if>
    </where>
    order by it.itemno asc
    limit #{start}, #{limit}
  </select>

   <select id="listOrderOutByItemId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orderout
        where item_id = #{itemId}
        and amount > 0
        order by amount desc
   </select>

   <update id="updateOrderOutAmountBy" parameterType="java.util.Map">
        update orderout
        <if test="increaseFlag==1">
            set amount = amount + #{amount}
        </if>
        <if test="increateFlag==0">
            set amount = amount - #{amount}
        </if>
        <where>
            id = #{orderOutId}
        </where>
   </update>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orderout
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.core.pojo.OrderOut">
    insert into orderout (id, oderOutNo, amount,
      remark, TradeOut_id, Item_id)
    values (#{id,jdbcType=VARCHAR}, #{oderoutno,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER},
      #{remark,jdbcType=VARCHAR},
      #{tradeoutId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.core.pojo.OrderOut">
    insert into orderout
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="oderoutno != null">
        oderOutNo,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="tradeoutId != null">
        TradeOut_id,
      </if>
      <if test="itemId != null">
        Item_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="oderoutno != null">
        #{oderoutno,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tradeoutId != null">
        #{tradeoutId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.core.pojo.OrderOut">
    update orderout
    <set>
      <if test="oderoutno != null">
        oderOutNo = #{oderoutno,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tradeoutId != null">
        TradeOut_id = #{tradeoutId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        Item_id = #{itemId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.core.pojo.OrderOut">
    update orderout
    set oderOutNo = #{oderoutno,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      TradeOut_id = #{tradeoutId,jdbcType=VARCHAR},
      Item_id = #{itemId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
