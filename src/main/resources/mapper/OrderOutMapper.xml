<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.dao.OrderOutMapper">
  <resultMap id="BaseResultMap" type="com.core.pojo.OrderOut">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="oderOutNo" jdbcType="VARCHAR" property="oderoutno" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="dateOut" jdbcType="DATE" property="dateout" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="requester" jdbcType="VARCHAR" property="requester" />
    <result column="TradeOut_id" jdbcType="VARCHAR" property="tradeoutId" />
    <result column="Item_id" jdbcType="VARCHAR" property="itemId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, oderOutNo, amount, dateOut, remark, requester, TradeOut_id, Item_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderout
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orderout
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.core.pojo.OrderOut">
    insert into orderout (id, oderOutNo, amount, 
      dateOut, remark, requester, 
      TradeOut_id, Item_id)
    values (#{id,jdbcType=VARCHAR}, #{oderoutno,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{dateout,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, #{requester,jdbcType=VARCHAR}, 
      #{tradeoutId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.core.pojo.OrderOut">
    insert into orderout
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="oderoutno != null">
        oderOutNo,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="dateout != null">
        dateOut,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="requester != null">
        requester,
      </if>
      <if test="tradeoutId != null">
        TradeOut_id,
      </if>
      <if test="itemId != null">
        Item_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="oderoutno != null">
        #{oderoutno,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="dateout != null">
        #{dateout,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="requester != null">
        #{requester,jdbcType=VARCHAR},
      </if>
      <if test="tradeoutId != null">
        #{tradeoutId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.core.pojo.OrderOut">
    update orderout
    <set>
      <if test="oderoutno != null">
        oderOutNo = #{oderoutno,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="dateout != null">
        dateOut = #{dateout,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="requester != null">
        requester = #{requester,jdbcType=VARCHAR},
      </if>
      <if test="tradeoutId != null">
        TradeOut_id = #{tradeoutId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        Item_id = #{itemId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.core.pojo.OrderOut">
    update orderout
    set oderOutNo = #{oderoutno,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      dateOut = #{dateout,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      requester = #{requester,jdbcType=VARCHAR},
      TradeOut_id = #{tradeoutId,jdbcType=VARCHAR},
      Item_id = #{itemId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>