<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.core.pojo.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="isDeleted" jdbcType="INTEGER" property="isdeleted" />
    <result column="isAdmin" jdbcType="INTEGER" property="isadmin" />
    <result column="userNo" jdbcType="VARCHAR" property="userno" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userName, Password, isDeleted, isAdmin, userNo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="listUser" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where isdeleted = 0
    <if test="username != ''">
    and username = #{username}
    </if>
    order by isadmin asc
    limit #{start}, #{limit}
      </select>
  <select id="countUser" resultType="java.lang.Integer">
    select count(id)
    from user
    where isdeleted=0
  </select>
  <select id="searchUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where isdeleted = 0 limit #{offset}, #{rows};
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.core.pojo.User">
    insert into user (id, userName, Password,
      isDeleted, isAdmin, userNo
      )
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{isdeleted,jdbcType=INTEGER}, #{isadmin,jdbcType=INTEGER}, #{userno,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.core.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="isdeleted != null">
        isDeleted,
      </if>
      <if test="isadmin != null">
        isAdmin,
      </if>
      <if test="userno != null">
        userNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="isadmin != null">
        #{isadmin,jdbcType=INTEGER},
      </if>
      <if test="userno != null">
        #{userno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.core.pojo.User">
    update user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null">
        isDeleted = #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="isadmin != null">
        isAdmin = #{isadmin,jdbcType=INTEGER},
      </if>
      <if test="userno != null">
        userNo = #{userno,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.core.pojo.User">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      isDeleted = #{isdeleted,jdbcType=INTEGER},
      isAdmin = #{isadmin,jdbcType=INTEGER},
      userNo = #{userno,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
